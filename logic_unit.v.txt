module logic_unit(input [3:0] opcode, input A, input B, output reg result);
    always @(*) begin
        case(opcode)
            4'b0001: result = A & B; // AND
            4'b0010: result = A | B; // OR
            4'b0011: result = A ^ B; // XOR
            4'b0100: result = ~A;    // NOT (ignores B)
            4'b0101: result = ~B; // NOT(ignores A)
     	    4'b0110: result = ~(A&B); //NAND
        	4'b0111: result = ~(A|B); //NOR
        	4'b1000: result = ~(A^B); // XNOR

            default: result = 1'b0;
        endcase
    end
endmodule
